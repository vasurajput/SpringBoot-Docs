If firebase not work in your project do following ( importank SO link => https://stackoverflow.com/questions/52659859/module-not-found-cant-resolve-firebase-index )
1. Do npm uninstall firebase
2. npm cache clear
3. npm install firebase



######################################################  Props in React Js ####################################
We can use props to pass data between two components. Suppose we have to pass data from our App component to Class Component so we use props.

App.Js [ THis is the main React class Component ]
======
function App() {
  return (
    <div className="App">
      My First React Application
      <Person name="vasu" age="27"/>
      <Person name="konika" age="26">My Hobbies: Sex</Person>
      <Person name="sushmita" age="28"/>
    </div>
  );
}

Person.Js   [ This is the functional component that we have created ]
=========
import React from 'react';
const person = (props) => {
    return (
        <div>
            <h1>
                I am {props.name} and i am {props.age}years old.
            </h1>
            <p>{props.children}</p>
        </div>

    )
}
export default person;



###################################################################### State in React Js ##########################################################
We can use state only in class component not in the functional component
eg:
===
class App extends React.Component {
  state = {
    persons: [
      { name: 'vasu', age: 27 },
      { name: 'konika', age: 26 },
      { name: 'sushmita', age: 28 }
    ]
  }
  render() {
    return (
      <div className="App" >
        My First React Application
        <Person name={this.state.persons[0].name} age={this.state.persons[0].age} />
        <Person name={this.state.persons[1].name} age={this.state.persons[1].age}>My Hobbies: Sex</Person>
        <Person name={this.state.persons[2].name} age={this.state.persons[2].age} />
      </div>
    );
  }
}


#######################################    Change State in React Js ##########################################################################
React uses "setState" methos to change the state. In this example we use a button and on click on this button we change the state. Means when we click on this button our name 
will be change to the full neme.

eg:
====
class App extends React.Component {
  state = {
    persons: [
      { name: 'vasu', age: 27 },
      { name: 'konika', age: 26 },
      { name: 'sushmita', age: 28 }
    ]
  }

  swithNameHandler = () => {
    console.log('button clicked');
    this.setState({
      persons: [
        { name: 'vasu Rajput', age: 27 },
        { name: 'konika Bisht', age: 26 },
        { name: 'sushmita Joshi', age: 28 }
      ]
    })
  }

  render() {
    return (
      <div className="App" >
        My First React Application<br />
        <button onClick={this.swithNameHandler}>Switch Names</button>
        <Person name={this.state.persons[0].name} age={this.state.persons[0].age} />
        <Person name={this.state.persons[1].name} age={this.state.persons[1].age}>My Hobbies: Watching Movies</Person>
        <Person name={this.state.persons[2].name} age={this.state.persons[2].age} />
      </div>
    );
  }
}
export default App;



##########################################   Hooks in React Js #####################################################################
As we know we can't use state in our functional component. so to manage state in functional components we use the hooks.
so to use hooks we have to import them as well. And most usefull hooks is "useState".

import React, { useState } from 'react';

useState always return the two elements
   First Element is always be the current state
   Second Element will be the function which allow us to modify the current state.
   
Note: 1- Class Component uses state
      2- Functional Component uses hooks that is useState.
      3- We can use only one state in class component where as we can use multiple useState hooks in functional interface.
      
eg of useState hooks:
=====================
import React, { useState } from 'react';
import './App.css';
import Person from './Person/Person.js';

const App = props => {
  const [personState, personSetState] = useState({
    persons: [
      { name: 'vasu', age: 27 },
      { name: 'konika', age: 26 },
      { name: 'sushmita', age: 28 }
    ]
  })

  const swithNameHandler = () => {
    console.log('button clicked');
    personSetState({
      persons: [
        { name: 'vasu Rajput', age: 27 },
        { name: 'konika Bisht', age: 26 },
        { name: 'sushmita Joshi', age: 28 }
      ]
    })
  }


  return (
    <div className="App" >
      My First React Application<br />
      <button onClick={swithNameHandler}>Switch Names</button>
      <Person name={personState.persons[0].name} age={personState.persons[0].age} />
      <Person name={personState.persons[1].name} age={personState.persons[1].age}>My Hobbies: Watching Movies</Person>
      <Person name={personState.persons[2].name} age={personState.persons[2].age} />
    </div>
  );
}
export default App;


#######################################  Show and Hide Content of an Component #######################################################
We are using a Persons variable and put persons div inside this and return only if state condition is true

1- Our default state is 
    const [personState, personSetState] = useState({
    persons: [
      { name: 'vasu', age: 27 },
      { name: 'konika', age: 26 },
      { name: 'sushmita', age: 28 }
    ],
    showPersonState: true
  })
  
2- Now Declare a variable Persons and set persons div to this variable
  let persons = null;
  if (personState.showPersonState) {
    persons = (
      <div>
        <Person name={personState.persons[0].name} age={personState.persons[0].age} />
        <Person name={personState.persons[1].name} age={personState.persons[1].age}
          click={swithNameHandler.bind(this, "MC")}
          change={nameChangeHandler}
        >My Hobbies: Watching Movies</Person>
        <Person name={personState.persons[2].name} age={personState.persons[2].age} />
      </div>
    );
  }
  
3- Now Create two button to show and Hide this data
     <button style={inlineCss} onClick={togglePersonHandler}>Sabko Hide kr do BC</button>
     <button style={inlineCss} onClick={showTogglePersonHandler}>Sbako Dikhao BC</button>
     
4- Create these onClick method to show and hide data
     const togglePersonHandler = () => {
    personSetState({
      persons: [
        { name: 'vasu Rajput', age: 27 },
        { name: 'konika Rajput', age: 26 },
        { name: 'sushmita Rajput', age: 28 }
      ],
      showPersonState: false
    })
  }
  const showTogglePersonHandler = () => {
    personSetState({
      persons: [
        { name: 'vasu Rajput', age: 27 },
        { name: 'konika Rajput', age: 26 },
        { name: 'sushmita Rajput', age: 28 }
      ],
      showPersonState: true
    })
  }
  
5- Now your return Method of Functional Component is look like this Now click on these buttons and check your functionallity

   return (
    <div className="App" >
      My First React Application<br />
      <button style={inlineCss} onClick={togglePersonHandler}>Sabko Hide kr do BC</button>
      <button style={inlineCss} onClick={showTogglePersonHandler}>Sbako Dikhao BC</button>
      {persons}
    </div>
  );

